schema {
  query: Query
}
type WalletSchema @key(fields: "id") {
  id: ID!
  balance: Float!
  defaultCurrency: FiatCurrency!
}
"""Fiat currency"""
enum FiatCurrency {
  USD
  CAD
  VND
  AUD
  MXN
}
type Query {
  getWallet(data: GetWalletDto!): GetWallet
  getMeWallet: GetMeWallet
  getWallets: GetWallets
}
type GetWallet {
  success: Boolean!
  errors: [ApiError!]
  data: WalletSchema
}
type ApiError {
  path: String!
  message: String!
}
input GetWalletDto {
  userId: String!
}
type GetMeWallet {
  success: Boolean!
  errors: [ApiError!]
  data: WalletSchema
}
type GetWallets {
  success: Boolean!
  errors: [ApiError!]
  data: [WalletSchema!]!
}