schema {
  query: Query
  mutation: Mutation
}
type Query {
  lightningGetTransactions(Pagination: PaginationInputType): LndGetTransactions
}
type LndGetTransactions {
  success: Boolean!
  errors: [ApiError!]
  data: [LightningTransaction!]!
}
type ApiError {
  path: String!
  message: String!
}
type LightningTransaction {
  amount: Float!
  hash: String!
  fees: Float!
  blockHash: String!
  timeStamp: Float!
}
input PaginationInputType {
  limit: Int
  skip: Int
}
type Mutation {
  sendLightningPayment(data: SendLightningPaymentDto!): SendLightningPayment
}
type SendLightningPayment {
  success: Boolean!
  errors: [ApiError!]
  data: String
}
input SendLightningPaymentDto {
  paymentRequest: String!
}